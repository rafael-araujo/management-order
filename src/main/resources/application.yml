server:
  port: 8080
  servlet:
    context-path: /myapp

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: my-spring-boot-app
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    queue:
      order:
        input: ${QUEUE_INPUT_ORDER:input_order}
        input-dlq: ${QUEUE_INPUT_ORDER:input_order_dlq}
        output: ${QUEUE_OUTPUT_ORDER:output_order}
    exchange:
      order: ${DEAD_LETTER_EXCHANGE:dead_letter_exchange}
    routing-key:
      order: ${ROUTING_KEY_DLQ:dlq.routing.key}

  datasource:
#    url: jdbc:postgresql://localhost:5432/order_database
    url: jdbc:postgresql://order-db:5432/order_database

    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
    show-sql: false

factory:
  url: http://localhost:7455/example

logging:
  level:
    root: info
    com.example.myapp: debug
#    org.springframework.boot: DEBUG

management:
  parameters:
    time-verification: ${TIME_VERIFICATION_SECONDS:3600}
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      logging:
        enabled: true